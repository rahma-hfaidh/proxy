{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import pump = require(\"pump\");\nimport { Request, Response, RequestOptions } from \"servie/dist/node\";\nimport { useRawBody } from \"servie/dist/common\";\nimport { IncomingMessage, ServerResponse } from \"http\";\nimport { finalhandler } from \"servie-finalhandler\";\nimport { errorhandler } from \"servie-errorhandler\";\n\n/**\n * Node.js HTTP request options.\n */\nexport interface HttpRequestOptions extends RequestOptions {\n  request: IncomingMessage;\n}\n\n/**\n * Node.js HTTP request class.\n */\nexport class HttpRequest extends Request {\n  request: IncomingMessage;\n\n  constructor(input: string | Request, options: HttpRequestOptions) {\n    super(input, options);\n    this.request = options.request;\n  }\n}\n\n/**\n * HTTP server application signature.\n */\nexport type App = (\n  req: HttpRequest,\n  next: () => Promise<Response>\n) => Response | Promise<Response>;\n\n/**\n * HTTP server options.\n */\nexport interface Options {\n  production?: boolean;\n  logError?: (err: any) => void;\n}\n\n/**\n * Create a node.js-compatible http handler.\n */\nexport function createHandler(app: App, options: Options = {}) {\n  return function(\n    request: IncomingMessage,\n    response: ServerResponse\n  ): Promise<void> {\n    let didRespond = false;\n\n    const req = new HttpRequest(request.url || \"/\", {\n      method: request.method,\n      body: request,\n      headers: request.headers,\n      omitDefaultHeaders: true,\n      request: request\n    });\n\n    const mapError = errorhandler(req, {\n      production: options.production,\n      log: options.logError\n    });\n\n    function sendError(err: Error) {\n      return sendResponse(mapError(err));\n    }\n\n    function sendResponse(res: Response): void {\n      if (didRespond) return;\n\n      didRespond = true;\n      req.signal.emit(\"responseStarted\");\n\n      if (res.status) response.statusCode = res.status;\n      if (res.statusText) response.statusMessage = res.statusText;\n\n      const headers = res.headers.asObject();\n      const rawBody = useRawBody(res);\n\n      for (const key of Object.keys(headers)) {\n        response.setHeader(key, headers[key]);\n      }\n\n      Promise.all([\n        res.trailer.then(trailer => {\n          response.addTrailers(trailer.asObject());\n        }),\n        // Creating a stream is super expensive, use buffered values when possible.\n        rawBody === null\n          ? new Promise(resolve => {\n              req.signal.emit(\"responseEnded\");\n              response.end();\n              return resolve();\n            })\n          : Buffer.isBuffer(rawBody) || typeof rawBody === \"string\"\n          ? new Promise<undefined>(resolve => {\n              response.write(rawBody);\n              response.end();\n              req.signal.emit(\"responseEnded\");\n              return resolve();\n            })\n          : new Promise<undefined>((resolve, reject) => {\n              pump(rawBody, response, err => {\n                req.signal.emit(\"responseEnded\");\n                return err ? reject(err) : resolve();\n              });\n            })\n      ]).catch(sendError);\n    }\n\n    req.signal.on(\"abort\", () => request.destroy());\n\n    req.signal.emit(\"requestStarted\");\n\n    return Promise.resolve(app(req, finalhandler(req))).then(\n      res => sendResponse(res),\n      err => sendError(err)\n    );\n  };\n}\n"]}