#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const arg = require("arg");
const path_1 = require("path");
const http_1 = require("http");
const index_1 = require("./index");
const args = arg({
    "--help": Boolean,
    "--file": String,
    "--port": Number,
    "--key": String,
    "--hostname": String,
    "-h": "--help",
    "-f": "--file",
    "-p": "--port",
    "-H": "--hostname",
    "-k": "--key"
});
const { "--port": port = Number(process.env.PORT) || 3000, "--help": help, "--file": file, "--hostname": hostname = "0.0.0.0", "--key": key = "" } = args;
if (help) {
    console.log(`
    Description
      Start a HTTP server based on Servie.js
    Usage
      $ servie-http -p <port> -f <script.js> -k default
    Options
      --file, -f      The file to resolve which exports an app to serve over HTTP
      --port, -p      The port number on which to start the application (${port})
      --hostname, -H  The hostname on which to start the application (${hostname})
      --key, -k       The property of "--file" exporting the application (${JSON.stringify(key)})
  `);
    process.exit(0);
}
// The `--file` argument is the only required argument.
if (!file)
    throw new TypeError("Missing `--file` argument");
const pkg = require(path_1.join(process.cwd(), file));
const main = key ? pkg[key] : pkg.__esModule ? pkg.default : pkg;
if (typeof main !== "function") {
    throw new TypeError(`Invalid "main" function exported: ${JSON.stringify(key)}`);
}
const app = index_1.createHandler(main);
http_1.createServer(app).listen(port, hostname, () => {
    console.log(`Server running on http://localhost:${port}`);
});
//# sourceMappingURL=bin.js.map