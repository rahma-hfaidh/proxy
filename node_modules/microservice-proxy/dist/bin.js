#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const arg = require("arg");
const path_1 = require("path");
const http_1 = require("http");
const servie_http_1 = require("servie-http");
const index_1 = require("./index");
const args = arg({
    "--config": String,
    "--port": Number,
    "--hostname": String,
    "--help": Boolean,
    "-c": "--config",
    "-p": "--port",
    "-h": "--help",
    "-H": "--hostname"
});
const { "--help": help, "--config": config, "--port": port = 9000, "--hostname": hostname = "0.0.0.0" } = args;
if (help) {
    console.log(`
  Description
    Start a HTTP-based micro-service proxy
  Usage
    $ microservice-proxy -p <port> -c <config.json>
  Options
    --config, -c    The route configuration file
    --port, -p      The port number to start the proxy (${port})
    --hostname, -H  The host name to start the proxy (${hostname})
  `);
    process.exit(0);
}
if (!config) {
    console.error("> Start with `--config` (`-c`) option");
    process.exit(1);
}
const { rules } = require(path_1.join(process.cwd(), config));
const app = servie_http_1.createHandler(index_1.proxy(rules));
http_1.createServer(app).listen(port, hostname, () => {
    console.log(`> Ready on http://${hostname}:${port}`);
});
//# sourceMappingURL=bin.js.map