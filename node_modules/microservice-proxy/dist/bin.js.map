{"version":3,"file":"bin.js","sourceRoot":"","sources":["../src/bin.ts"],"names":[],"mappings":";;;AAEA,2BAA4B;AAC5B,+BAA4B;AAC5B,+BAAoC;AACpC,6CAA4C;AAC5C,mCAAgC;AAEhC,MAAM,IAAI,GAAG,GAAG,CAAC;IACf,UAAU,EAAE,MAAM;IAClB,QAAQ,EAAE,MAAM;IAChB,YAAY,EAAE,MAAM;IACpB,QAAQ,EAAE,OAAO;IACjB,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,YAAY;CACnB,CAAC,CAAC;AAEH,MAAM,EACJ,QAAQ,EAAE,IAAI,EACd,UAAU,EAAE,MAAM,EAClB,QAAQ,EAAE,IAAI,GAAG,IAAI,EACrB,YAAY,EAAE,QAAQ,GAAG,SAAS,EACnC,GAAG,IAAI,CAAC;AAET,IAAI,IAAI,EAAE;IACR,OAAO,CAAC,GAAG,CAAC;;;;;;;0DAO4C,IAAI;wDACN,QAAQ;GAC7D,CAAC,CAAC;IAEH,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;AAED,IAAI,CAAC,MAAM,EAAE;IACX,OAAO,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;IACvD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;AAED,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,MAAO,CAAC,CAAC,CAAC;AACxD,MAAM,GAAG,GAAG,2BAAa,CAAC,aAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAExC,mBAAY,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE;IAC5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,QAAQ,IAAI,IAAI,EAAE,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC","sourcesContent":["#!/usr/bin/env node\n\nimport arg = require(\"arg\");\nimport { join } from \"path\";\nimport { createServer } from \"http\";\nimport { createHandler } from \"servie-http\";\nimport { proxy } from \"./index\";\n\nconst args = arg({\n  \"--config\": String,\n  \"--port\": Number,\n  \"--hostname\": String,\n  \"--help\": Boolean,\n  \"-c\": \"--config\",\n  \"-p\": \"--port\",\n  \"-h\": \"--help\",\n  \"-H\": \"--hostname\"\n});\n\nconst {\n  \"--help\": help,\n  \"--config\": config,\n  \"--port\": port = 9000,\n  \"--hostname\": hostname = \"0.0.0.0\"\n} = args;\n\nif (help) {\n  console.log(`\n  Description\n    Start a HTTP-based micro-service proxy\n  Usage\n    $ microservice-proxy -p <port> -c <config.json>\n  Options\n    --config, -c    The route configuration file\n    --port, -p      The port number to start the proxy (${port})\n    --hostname, -H  The host name to start the proxy (${hostname})\n  `);\n\n  process.exit(0);\n}\n\nif (!config) {\n  console.error(\"> Start with `--config` (`-c`) option\");\n  process.exit(1);\n}\n\nconst { rules } = require(join(process.cwd(), config!));\nconst app = createHandler(proxy(rules));\n\ncreateServer(app).listen(port, hostname, () => {\n  console.log(`> Ready on http://${hostname}:${port}`);\n});\n"]}