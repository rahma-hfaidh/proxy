import { Request, Response } from "servie/dist/node";
import { URL } from "url";
/**
 * Proxy configuration object.
 */
export interface Config {
    url: string;
    path?: string;
    methods?: string[];
    newPath?: string;
    end?: boolean;
    start?: boolean;
    sensitive?: boolean;
}
/**
 * Create a simple service to proxy requests.
 */
export declare class Service {
    url: string;
    re: RegExp;
    methods: Set<string>;
    newPath?: string;
    constructor(config: Config);
    isMethod(method: string): boolean;
    isPath(path: string): boolean;
    matches(url: URL, method: string): boolean;
    getPath(path: string): string;
    getUrl(url: URL): string;
}
/**
 * Proxy any number of paths to services.
 */
export declare function proxy(configs: Config[], send?: (req: Request, next: () => never) => Promise<Response>): (req: Request, next: () => Promise<Response>) => Promise<Response>;
