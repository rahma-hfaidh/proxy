/// <reference types="node" />
import { Request, Response, HeadersInit, CreateBody } from "servie/dist/node";
export interface SendOptions {
    status?: number;
    headers?: HeadersInit;
    contentType?: string;
    contentLength?: number;
    mtime?: Date;
    etag?: boolean | string;
}
/**
 * Create an empty response.
 */
export declare function sendEmpty(req: Request, options?: SendOptions): Response;
/**
 * JSON response configuration.
 */
export interface JsonOptions extends SendOptions {
    jsonSpaces?: string | number;
    jsonReplacer?: (key: string, value: any) => string;
}
/**
 * Send JSON response.
 */
export declare function sendJson(req: Request, payload: boolean | string | number | object, options?: JsonOptions): Response;
/**
 * Send the response as a stream.
 */
export declare function sendStream(req: Request, payload: CreateBody, options?: SendOptions): Response;
/**
 * Send as text response (defaults to `text/plain`).
 */
export declare function sendText(req: Request, payload: CreateBody, options?: SendOptions): Response;
/**
 * Send as html response (`text/html`).
 */
export declare function sendHtml(req: Request, payload: CreateBody, options?: SendOptions): Response;
/**
 * Generate the response for Servie.
 */
export declare function send(req: Request, payload: CreateBody, options?: SendOptions): Response;
/**
 * Create an ETag from the payload body.
 */
export declare function entityTag(body: string | Buffer): string | undefined;
