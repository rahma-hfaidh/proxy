"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const servie_1 = require("servie");
const index_1 = require("./index");
describe("servie url", () => {
    it("should parse url from request", () => {
        const req = new servie_1.Request("/test");
        const URL = index_1.getURL(req);
        expect(URL.host).toEqual("localhost");
        expect(URL.pathname).toEqual("/test");
    });
    it("should reuse cache when request already parsed", () => {
        const req = new servie_1.Request("/test");
        const URL = index_1.getURL(req);
        expect(URL.host).toEqual("localhost");
        expect(URL.pathname).toEqual("/test");
        const URL2 = index_1.getURL(req);
        expect(URL2).toBe(URL);
    });
    it("should invalidate cache", () => {
        const req = new servie_1.Request("/test");
        const URL = index_1.getURL(req);
        expect(URL.host).toEqual("localhost");
        expect(URL.pathname).toEqual("/test");
        req.url = "/foo"; // Change `url` from under cache.
        const URL2 = index_1.getURL(req);
        expect(URL2).not.toBe(URL);
        expect(URL2.host).toEqual("localhost");
        expect(URL2.pathname).toEqual("/foo");
    });
    it("should support full urls", () => {
        const req = new servie_1.Request("https://example.com/test");
        const URL = index_1.getURL(req);
        expect(URL.host).toEqual("example.com");
        expect(URL.pathname).toEqual("/test");
    });
});
//# sourceMappingURL=index.spec.js.map