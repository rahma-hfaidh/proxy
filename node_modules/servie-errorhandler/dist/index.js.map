{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { STATUS_CODES } from \"http\";\nimport escapeHtml = require(\"escape-html\");\nimport Negotiator = require(\"negotiator\");\nimport { Request, Response } from \"servie/dist/node\";\nimport { sendJson, sendHtml } from \"servie-send\";\n\nconst DOUBLE_SPACE_REGEXP = /\\x20{2}/g;\n\nexport interface Options {\n  production?: boolean;\n  log?: (err: any) => void;\n}\n\n/**\n * Render errors into a response object.\n */\nexport function errorhandler(\n  req: Request,\n  options: Options = {}\n): (err: any) => Response {\n  const env = process.env.NODE_ENV || \"development\";\n  const production = options.production === true || env === \"production\";\n  const log =\n    options.log || (env === \"test\" ? Function.prototype : console.error);\n\n  return function errorhandler(err: unknown) {\n    const output = toOutput(err, production);\n    log(err);\n    return render(req, output);\n  };\n}\n\n/**\n * Boom-compatible output.\n */\ninterface Output {\n  status: number;\n  headers: Record<string, string | string[]>;\n  payload: object;\n}\n\n/**\n * Convert an error into an \"output\" object.\n */\nfunction toOutput(err: any, production: boolean): Output {\n  const error: {\n    output?: {\n      statusCode?: number;\n      headers?: Record<string, string | string[]>;\n      payload?: any;\n    };\n    statusCode?: number;\n    status?: number;\n    headers?: Record<string, string | string[]>;\n    message?: string;\n  } =\n    err == null\n      ? { message: `Empty error: ${err}` }\n      : typeof err === \"object\"\n      ? err\n      : { message: String(err) };\n\n  const output = error.output || {};\n  const status =\n    Number(output.statusCode || error.statusCode || error.status) || 500;\n  const headers = output.headers || error.headers || {};\n  const payload = output.payload || {\n    status,\n    error: STATUS_CODES[status] || \"Error\",\n    message: (production ? undefined : error.message) || \"Error\"\n  };\n\n  return { status, headers, payload };\n}\n\n/**\n * Render HTTP response.\n */\nfunction render(req: Request, output: Output) {\n  const negotiator = new Negotiator({\n    headers: {\n      accept: req.headers.get(\"accept\") || undefined\n    }\n  });\n\n  const type = negotiator.mediaType([\"text/html\", \"application/json\"]);\n  if (type === \"text/html\") return renderHtml(req, output);\n  return renderJson(req, output);\n}\n\n/**\n * Render HTML response.\n */\nfunction renderHtml(req: Request, output: Output) {\n  const content = escapeHtml(JSON.stringify(output.payload, null, 2));\n\n  return sendHtml(\n    req,\n    `\n<!doctype html>\n<html lang=\"en\">\n<head><meta charset=\"utf-8\"><title>Error</title></head>\n<body>\n<pre>${content.replace(DOUBLE_SPACE_REGEXP, \" &nbsp;\")}</pre>\n</body>\n</html>\n  `.trim(),\n    {\n      status: output.status,\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\",\n        \"Content-Security-Policy\": \"default-src 'self'\",\n        ...output.headers\n      }\n    }\n  );\n}\n\n/**\n * Send JSON response.\n */\nfunction renderJson(req: Request, output: Output) {\n  return sendJson(req, output.payload, {\n    status: output.status,\n    headers: {\n      \"X-Content-Type-Options\": \"nosniff\",\n      ...output.headers\n    }\n  });\n}\n"]}